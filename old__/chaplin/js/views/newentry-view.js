// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'views/base/view', 'models/entry', 'text!templates/entry-new.hbs'], function(Chaplin, View, Entry, template) {
  'use strict';
  var NewEntryView;
  return NewEntryView = (function(_super) {
    __extends(NewEntryView, _super);

    function NewEntryView() {
      this.submit = __bind(this.submit, this);
      return NewEntryView.__super__.constructor.apply(this, arguments);
    }

    NewEntryView.prototype.autoRender = true;

    NewEntryView.prototype.tagName = 'div';

    NewEntryView.prototype.className = 'new-entry';

    NewEntryView.prototype.events = {
      'submit form': 'submit'
    };

    NewEntryView.prototype.submit = function(event) {
      event.preventDefault();
      this.model.set('date', $('input[name="date"]').val());
      this.model.set('name', $('input[name="name"]').val());
      this.model.set('category_id', $('#category_id').val());
      this.model.set('type', $('input[name="type"]').val());
      this.model.set('sum', $('input[name="sum"]').val());
      this.model.save({
        success: (function(_this) {
          return function() {
            return Chaplin.utils.redirectTo('entries#home');
          };
        })(this),
        error: (function(_this) {
          return function() {
            return console.log('error');
          };
        })(this)
      });
      return Chaplin.utils.redirectTo('entries#home');
    };

    NewEntryView.prototype.template = template;

    template = null;

    return NewEntryView;

  })(View);
});
