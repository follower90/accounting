// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/user', 'views/site-view'], function(Chaplin, User, SiteView) {
  'use strict';
  var Controller;
  return Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      return Controller.__super__.constructor.apply(this, arguments);
    }

    Controller.prototype.beforeAction = function(params, route) {
      this.reuse('site', SiteView);
      if (!Chaplin.mediator.user) {
        if (!(route.path === 'login' && route.action === 'loginpage')) {
          this.model = new User();
          this.login = localStorage.getItem('login');
          this.password = localStorage.getItem('password');
          if ((this.login !== '' && this.password !== '') && this.login && this.password) {
            return this.model.fetch({
              type: 'post',
              data: {
                'login': this.login,
                'password': this.password
              },
              success: (function(_this) {
                return function(data) {
                  Chaplin.mediator.user = data.attributes;
                  return Chaplin.utils.redirectTo('entries#home');
                };
              })(this),
              error: (function(_this) {
                return function() {
                  return _this.redirectTo('login#loginpage');
                };
              })(this)
            });
          } else {
            return this.redirectTo('login#loginpage');
          }
        }
      }
    };

    return Controller;

  })(Chaplin.Controller);
});
