// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'controllers/login-controller', 'views/base/view', 'models/user', 'text!templates/login.hbs'], function(Chaplin, LoginController, View, User, template) {
  'use strict';
  var LoginView;
  return LoginView = (function(_super) {
    __extends(LoginView, _super);

    function LoginView() {
      this.submit = __bind(this.submit, this);
      return LoginView.__super__.constructor.apply(this, arguments);
    }

    LoginView.prototype.autoRender = true;

    LoginView.prototype.tagName = 'div';

    LoginView.prototype.className = 'login-page';

    LoginView.prototype.events = {
      'submit form': 'submit'
    };

    LoginView.prototype.submit = function(event) {
      event.preventDefault();
      this.model.set('login', $('input[name="login"]').val());
      this.model.set('password', $('input[name="password"]').val());
      return this.model.fetch({
        type: 'post',
        data: this.model.attributes,
        success: (function(_this) {
          return function(data) {
            if (data.id) {
              Chaplin.mediator.user = data.attributes;
              localStorage.setItem("login", data.attributes.login);
              localStorage.setItem("password", data.attributes.password);
              return Chaplin.utils.redirectTo('entries#home');
            } else {
              return console.log('Incorrect data');
            }
          };
        })(this),
        error: (function(_this) {
          return function() {
            return console.log('Login error');
          };
        })(this)
      });
    };

    LoginView.prototype.template = template;

    template = null;

    return LoginView;

  })(View);
});
